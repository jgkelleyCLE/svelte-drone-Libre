import { Command } from '@oclif/core';
import readBlueprintOnDisk from '../../actions/blueprints/read-blueprint.js';
import { formatResourceTree, formatTitle } from '../../utils/display/blueprints-formatting.js';
export default class Plan extends Command {
    static description = 'Enumerate resources to be deployed - will not modify any resources';
    static examples = ['<%= config.bin %> <%= command.id %>'];
    async run() {
        const { errors, projectResource, stackResource, parsedBlueprint: { resources }, fileInfo, } = await readBlueprintOnDisk();
        if (errors.length > 0) {
            // printErrors(errors)
            this.log('Blueprint parse errors:');
            console.dir(errors, { depth: null });
            return;
        }
        if (!projectResource)
            this.log('Blueprint must contain a project resource');
        if (!stackResource)
            this.log('Blueprint must contain a stack resource');
        const name = stackResource?.name || 'Unknown';
        this.log(`${formatTitle('Blueprint', name)} Plan\n`);
        this.log(`Blueprint document: "${name}" (${fileInfo.fileName})`);
        this.log('');
        formatResourceTree(resources, this.log.bind(this));
        if (resources.length > 0) {
            this.log('\nRun `sanity blueprints deploy` to deploy these changes');
        }
    }
}
